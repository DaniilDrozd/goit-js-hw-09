{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAiBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzBbL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAQC,OAAOjB,EAAKK,MAAMa,OAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAKoB,OAAOF,MAAOC,GAAK,EAAG,CAE9ChB,EADiBgB,EACOH,GACrBK,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAwB,OAAOC,QAAQ,uBAAqBnB,MAAeC,MAAU,IAE9DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAwB,OAAOG,QAAQ,wBAAsBrB,MAAaC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const delay = Number(form.delay.value);\n  for (let i = 1; i <= form.amount.value; i += 1) {\n    const position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position}in${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌  Rejected promise  ${position}in${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","i","amount","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b2fe1da4.js.map"}